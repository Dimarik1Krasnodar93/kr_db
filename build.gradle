import java.util.stream.Collectors

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.2'
	id 'io.spring.dependency-management' version '1.1.2'
	id 'io.freefair.lombok' version '8.1.0'
	id "org.liquibase.gradle" version "2.2.0"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	maven { url "https://plugins.gradle.org/m2/" }
	gradlePluginPortal()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	liquibaseRuntime 'org.liquibase:liquibase-core:4.23.1'
	liquibaseRuntime 'org.liquibase:liquibase-groovy-dsl:2.1.1'
	implementation 'jakarta.annotation:jakarta.annotation-api:2.1.1'
	implementation'org.postgresql:postgresql:42.6.0'
	implementation 'org.hibernate:hibernate-core:5.6.15.Final'
	implementation 'org.javassist:javassist:3.23.1-GA'
	implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.2'
	implementation 'jakarta.xml.bind:jakarta.xml.bind-api:2.3.2'
	liquibaseRuntime 'info.picocli:picocli:4.6.3'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	liquibaseRuntime 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

}
apply plugin: 'org.liquibase.gradle'

tasks.named('test') {
	useJUnitPlatform()
}

def file = new File(System.getProperty("user.dir") + "/db/liquibase.properties")
def reader = new BufferedReader(new FileReader(file));
def map = new HashMap<String, String>();
try {
	map = reader.lines()
			.map(str -> str.split("="))
			.collect(Collectors.toMap(e -> e[0], e -> e[1]));
} finally {
	reader.close()
}

liquibase {
	activities {
		main {
			changeLogFile "/db/master.xml"
			url map.get("url")
			username map.get("username")
			password map.get("password")
		}
	}
}
